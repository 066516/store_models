// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int     @id @default(autoincrement())
  fullName           String
  email              String  @unique
  password           String
  phoneNumber        String?
  isAdmin            Boolean @default(false)
  orders             Order[]
  carts              Cart[]
  nbProductInPannier Int     @default(0)
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  category     String
  price        Float
  quantity     Int
  description  String?
  status       String?
  carts        Cart[]
  orderDetails OrderDetail[]
  coupons      Coupon[]      @relation("ProductCoupon")
}

model Coupon {
  id         Int       @id @default(autoincrement())
  code       String
  percentage Float?
  amount     Float?
  expiration DateTime?
  products   Product[] @relation("ProductCoupon")
}

model Cart {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(0)
}

model Order {
  id           Int           @id @default(autoincrement())
  nbProduct    Int
  totalAmount  Float         @default(0)
  status       String        @default("created")
  date         DateTime      @default(now())
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  orderDetails OrderDetail[]
  shipping     Shipping?
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderIdd], references: [id])
  orderIdd  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  unitPrice Float
}

model Shipping {
  id         Int              @id @default(autoincrement())
  status     String           @default("pending")
  date       DateTime         @default(now())
  order      Order            @relation(fields: [orderId], references: [id])
  orderId    Int              @unique // Make this field unique
  template   ShippingTemplate @relation(fields: [templateId], references: [id])
  templateId Int
}

model ShippingTemplate {
  id          Int        @id @default(autoincrement())
  address     String
  cost        Float
  duration    Int
  description String?
  shippings   Shipping[]
}
